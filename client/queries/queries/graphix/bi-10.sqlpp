/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

SET      `graphix.semantics.pattern` "edge-isomorphism";
WITH     ids AS ( FROM     GRAPH SNB.Native.SNBGraph
                  MATCH    (person:Person)-[k:KNOWS+]->(expertCandidatePerson:Person)
                  WHERE    person.id = $personId
                  GROUP BY person.id,
                           expertCandidatePerson.id AS expertCandidatePersonId
                  HAVING   MIN(PATH_HOP_COUNT(k)) BETWEEN $minMathDistance AND $maxPathDistance
                  SELECT   VALUE expertCandidatePersonId )
FROM     GRAPH SNB.Native.SNBGraph
MATCH    (expertCandidatePerson:Person)-[:IS_LOCATED_IN]->(:City)-[:IS_PART_OF]->(country:Country),
         (expertCandidatePerson)<-[:HAS_CREATOR]-(message:Message)-[:HAS_TAG]->(:Tag)-[:HAS_TYPE]->(tagClass:TagClass),
         (message)-[:HAS_TAG]->(tag:Tag)
WHERE    country.name = $country AND
         tagClass.name = $tagClass AND
         expertCandidatePerson.id IN ids
GROUP BY expertCandidatePerson,
         tag
SELECT   expertCandidatePerson.id,
         tag.name,
         COUNT(DISTINCT message) AS messageCount
ORDER BY messageCount DESC,
         tag.name ASC,
         expertCandidatePerson.id ASC
LIMIT    $limit;