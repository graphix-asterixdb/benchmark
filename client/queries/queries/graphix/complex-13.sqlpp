/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

SET        `graphix.semantics.pattern` "edge-isomorphism";
FROM       GRAPH SNB.Native.SNBGraph
MATCH      (person1:Person)
LEFT MATCH (person1)-[k:KNOWS+]->(person2:Person)
WHERE      person1.id = $person1Id AND
           person2.id = $person2Id
GROUP BY   person1,
           person2
GROUP AS   g
SELECT     ( FROM     g
             LET      pathLength = CASE
                                   WHEN g.person2 IS UNKNOWN
                                   THEN -1
                                   WHEN g.person1.id = g.person2.id
                                   THEN 0
                                   ELSE PATH_HOP_COUNT(g.k) END
             ORDER BY PATH_HOP_COUNT(g.k) ASC
             LIMIT    1 )[0] AS shortestPathLength;
