/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

WITH     sourceMessages AS ( FROM      GRAPH SNB.Native.SNBGraph
                             MATCH     (post:Message)
                             WHERE     post.content IS NOT NULL AND
                                       post.length < $lengthThreshold AND
                                       1 > $startDate AND
                                       post.language IN $languages AND
                                       post.isPost = TRUE
                             SELECT    post,
                                       post AS message
                             UNION ALL
                             FROM      GRAPH SNB.Native.SNBGraph
                             MATCH     (message:Message)-[:REPLY_OF+]->(post:Message)
                             WHERE     message.content IS NOT NULL AND
                                       message.length < $lengthThreshold AND
                                       1 > $startDate AND
                                       post.language IN $languages AND
                                       post.isPost = TRUE
                             SELECT    post,
                                       message ),
          personMessages AS ( FROM   GRAPH SNB.Native.SNBGraph
                              MATCH  (person:Person)<-[:HAS_CREATOR]-(message:Message)
                              JOIN   sourceMessages sm
                              ON     sm.message.id = message.id
                              SELECT person,
                                     sm.message )
FROM     ( FROM      GRAPH SNB.Native.SNBGraph
           MATCH     (person:Person)
           LEFT JOIN personMessages pm
           ON        pm.person.id = person.id
           GROUP BY  pm.person
           SELECT    pm.person,
                     COUNT(pm.message) AS messageCount ) t
GROUP BY t.messageCount
SELECT   t.messageCount,
         COUNT(t.person) AS personCount
ORDER BY personCount DESC,
         messageCount DESC;