/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
SET        `compiler.cbo` "false";
FROM       GRAPH SNB.Native.SNBGraph
MATCH      (tag:Tag WHERE tag.name = $tag),
           (tag)<-/*+indexnl*/[:HAS_TAG]-(m:Message),
           (m)-/*+indexnl*/[:HAS_CREATOR]->(person:Person)
LET        likers   = ( FROM   SNB.Native.Likes liker
                        WHERE  liker.messageId /*+indexnl*/ = m.id
                        SELECT VALUE liker.personId ),
           comments = ( FROM   SNB.Native.Messages comment
                        WHERE  comment.replyOfMessageId /*+indexnl*/ = m.id
                        SELECT VALUE comment.id )
GROUP BY   person.id AS personId
GROUP AS   g
LET        messageCount = COUNT(DISTINCT m.id),
           likeCount    = ( FROM   g
                            UNNEST g.likers liker
                            SELECT VALUE COUNT(DISTINCT liker) )[0],
           replyCount   = ( FROM   g
                            UNNEST g.comments comment
                            SELECT VALUE COUNT(DISTINCT comment) )[0]
SELECT     personId,
           replyCount,
           likeCount,
           messageCount,
           ( messageCount + 2 * replyCount + 10 * likeCount ) AS score
ORDER BY   score DESC,
           personId ASC
LIMIT      $limit;