/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
WITH     tagClasses AS ( FROM   GRAPH SNB.Native.SNBGraph
                         MATCH  (tc:TagClass)-[:IS_SUBCLASS_OF+]->(tagClass:TagClass)
                         WHERE  tagClass.name = $tagClassName
                         SELECT VALUE tc.name )
FROM     GRAPH SNB.Native.SNBGraph
MATCH    (person:Person)<-[:KNOWS]-(friend:Person)<-[:HAS_CREATOR]-(comment:Message)-[:REPLY_OF]->(post:Message),
         (post)-[:HAS_TAG]->(tag:Tag)-[:HAS_TYPE]->(tc:TagClass)
WHERE    person.id = $personId AND
         ( tc.name IN tagClasses OR
           tc.name = $tagClassName ) AND
         comment.isPost = FALSE AND
         post.isPost = TRUE
GROUP BY friend
GROUP AS g
SELECT   friend.id AS personId,
         friend.firstName AS personFirstName,
         friend.lastName AS personLastName,
         ( FROM   g gi
           SELECT DISTINCT VALUE gi.tag.name ) AS tagNames,
         COUNT(DISTINCT comment) as replyCount
ORDER BY replyCount DESC,
         personId ASC
LIMIT    $limit;