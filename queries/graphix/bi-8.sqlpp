/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
WITH       personScores AS ( FROM     ( FROM      GRAPH SNB.Native.SNBGraph
                                        MATCH     (tag:Tag)<-[:HAS_INTEREST]-(person:Person)
                                        WHERE     tag.name = $tag
                                        SELECT    person.id,
                                                  100 AS score
                                        UNION ALL
                                        FROM      GRAPH SNB.Native.SNBGraph
                                        MATCH     (tag:Tag)<-[:HAS_TAG]-(message:Message),
                                                  (message)-[:HAS_CREATOR]->(person:Person)
                                        WHERE     tag.name = $tag AND
                                                  message.creationDate > $startDate AND
                                                  message.creationDate < $endDate
                                        GROUP BY  person
                                        SELECT    person.id,
                                                  COUNT(message) AS score ) AS t
                             GROUP BY t.id
                             SELECT   t.id,
                                      SUM(t.score) AS score )
FROM       GRAPH SNB.Native.SNBGraph
MATCH      (p1:Person)
LEFT MATCH (p1)-[:KNOWS]->(p2:Person)
LET        score       = ( FROM   personScores t
                           WHERE  t.id = p1.id
                           SELECT VALUE t.score )[0],
           friendScore = ( FROM   temp t
                           WHERE  t.id = p2.id
                           SELECT VALUE t.score )[0]
WHERE      p1.id IN ( FROM   personScores t
                      SELECT VALUE t.id )
GROUP BY   p1,
           score
SELECT     p1.id AS id1,
           score,
           SUM(friendScore) AS friendsScore
ORDER BY   score + friendsScore DESC,
           p1.id ASC
LIMIT      $limit;