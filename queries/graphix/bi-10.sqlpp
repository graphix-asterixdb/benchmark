//       :param personId: 933
//       :param country: 'China'
//       :param tagClass: 'MusicalArtist'
//       :param minPathDistance: 3
//       :param maxPathDistance: 4

SET      `graphix.semantics.pattern` "edge-isomorphism";
WITH     ids AS ( FROM     GRAPH SNB.Native.SNBGraph
                  MATCH    (person:Person)-[k:KNOWS{1,4}]-(iexpertCandidatePerson:Person)
                  WHERE    person.id = $personId
                  GROUP BY person,
                           iexpertCandidatePerson
                  HAVING   MIN(PATH_HOP_COUNT(k)) >= 3
                  SELECT   VALUE iexpertCandidatePerson.id )
FROM     GRAPH SNB.Native.SNBGraph
MATCH    (expertCandidatePerson:Person)-[:IS_LOCATED_IN]->(:City)-[:IS_PART_OF]->(country:Country),
         (expertCandidatePerson)<-[:HAS_CREATOR]-(message:Message)-[:HAS_TAG]->(:Tag)-[:HAS_TYPE]->(tagClass:TagClass),
         (message)-[:HAS_TAG]->(tag:Tag)
WHERE    country.name = $country AND
         tagClass.name = $tagClass AND
         expertCandidatePerson.id IN ids
GROUP BY expertCandidatePerson, tag
SELECT   expertCandidatePerson.id,
         tag.name,
         COUNT(DISTINCT message) AS messageCount
ORDER BY messageCount DESC,
         tag.name ASC,
         expertCandidatePerson.id ASC
LIMIT    100;